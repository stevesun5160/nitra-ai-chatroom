// app global css in SCSS form
$color-properties: (
  bg: 'background-color',
  text: 'color',
);

$colors-with-shades: (
  'gray': (
    0: $gray-0,
    50: $gray-50,
    100: $gray-100,
    200: $gray-200,
    300: $gray-300,
    400: $gray-400,
    500: $gray-500,
    600: $gray-600,
    700: $gray-700,
    800: $gray-800,
    900: $gray-900,
  ),
  'teal': (
    0: $teal-0,
    50: $teal-50,
    100: $teal-100,
    200: $teal-200,
    300: $teal-300,
    400: $teal-400,
    500: $teal-500,
    600: $teal-600,
    700: $teal-700,
    800: $teal-800,
    900: $teal-900,
  ),
  'green': (
    0: $green-0,
    50: $green-50,
    100: $green-100,
    200: $green-200,
    300: $green-300,
    400: $green-400,
    500: $green-500,
    600: $green-600,
    700: $green-700,
    800: $green-800,
    900: $green-900,
  ),
  'yellow': (
    0: $yellow-0,
    50: $yellow-50,
    100: $yellow-100,
    200: $yellow-200,
    300: $yellow-300,
    400: $yellow-400,
    500: $yellow-500,
    600: $yellow-600,
    700: $yellow-700,
    800: $yellow-800,
    900: $yellow-900,
  ),
  'amber': (
    0: $amber-0,
    50: $amber-50,
    100: $amber-100,
    200: $amber-200,
    300: $amber-300,
    400: $amber-400,
    500: $amber-500,
    600: $amber-600,
    700: $amber-700,
    800: $amber-800,
    900: $amber-900,
  ),
  'orange': (
    0: $orange-0,
    50: $orange-50,
    100: $orange-100,
    200: $orange-200,
    300: $orange-300,
    400: $orange-400,
    500: $orange-500,
    600: $orange-600,
    700: $orange-700,
    800: $orange-800,
    900: $orange-900,
  ),
  'red': (
    0: $red-0,
    50: $red-50,
    100: $red-100,
    200: $red-200,
    300: $red-300,
    400: $red-400,
    500: $red-500,
    600: $red-600,
    700: $red-700,
    800: $red-800,
    900: $red-900,
  ),
);

@each $color-name, $shades in $colors-with-shades {
  @each $prop-name, $css-prop in $color-properties {
    @each $shade, $value in $shades {
      .#{$prop-name}-#{$color-name}-#{$shade} {
        #{$css-prop}: #{$value};
      }
      .\!#{$prop-name}-#{$color-name}-#{$shade} {
        #{$css-prop}: #{$value} !important;
      }

      @for $alpha from 1 through 9 {
        .#{$prop-name}-#{$color-name}-#{$shade}-0\.#{$alpha} {
          #{$css-prop}: rgba($value, $alpha * 0.1);
        }
        .\!#{$prop-name}-#{$color-name}-#{$shade}-0\.#{$alpha} {
          #{$css-prop}: rgba($value, $alpha * 0.1) !important;
        }
      }
    }
  }
}

// font sizes
$font-sizes: (
  xss: 10px,
  xs: 12px,
  sm: 14px,
  md: 16px,
  lg: 18px,
  xl: 20px,
  '2xl': 24px,
  '3xl': 32px,
  '4xl': 36px,
  '5xl': 48px,
  '6xl': 60px,
  '7xl': 72px,
  '8xl': 96px,
  '9xl': 128px,
);

@each $size, $value in $font-sizes {
  .font-#{$size} {
    font-size: $value;
    letter-spacing: 0.005em;
  }
  .\!font-#{$size} {
    font-size: $value !important;
    letter-spacing: 0.005em;
  }
}
